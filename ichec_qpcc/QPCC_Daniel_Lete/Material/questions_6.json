[
   {
        "question": "How is a quantum programming language different from a classical programming language?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "Underlying hardware gates are different.",

                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Quantum programming languages could target both quantum hardware and quantum software simulators.",

                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Quantum programming language uses typographical notations.",
                "correct": false,
                "feedback": "Wrong."
            },
            {
                "answer": "Quantum programming languages are always faster to execute.",
                "correct": false,
                "feedback": "Wrong."
            }
        ]
    },
     {
        "question": "When is it advisable to use generic quantum programming languages and libraries?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "If you're only planning to run the code on quantum hardware.",
                "correct": false,
                "feedback": "Wrong."
            },
            {
                "answer": "When looking for easy access to quantum computing resources.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "When looking for pre-coded domain specific functionality.",
                "correct": false,
                "feedback": "Wrong."
            },
            {
                "answer": "When you're trying to learn the basics of quantum programming.",
                "correct": true,
                "feedback": "Correct."
            }
            
            
        ]
    },
     {
        "question": "When is it advisable to use specialised quantum programming languages and libraries?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "When targeting a specific use case, for example QNLP, QML, Quantum Chemistry, etc",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "If there is existing integration with classical specialised libraries.",
                "correct": true,
                "feedback": "Correct."
            },
            {
            "answer": "When you're trying to learn the basics of quantum programming.",
                "correct": false,
                "feedback": "Wrong."
            },
            {
                "answer": "If you're only planning to run the code on quantum software simulators.",
                "correct": false,
                "feedback": "Incorrect."
            }
            
            
    ]
    },
    {
        "question": "What are the fundamental logical units of low level quantum programming languages and libraries?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "Same as high-level quantum programming languages.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Same as classical assembler programming languages.",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Same as classical programming languages.",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Different to high-level quantum programming languages.",
                "correct": false,
                "feedback": "Incorrect."
            }
        ]
    },
    {
        "question": "Which of the following is a specialised quantum programming component?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "Qulacs",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Qiskit",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Mitiq",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Pennylane",
                "correct": false,
                "feedback": "Incorrect."
            }
        ]
    },
     {
        "question": "How are quantum programming stacks as a service different from tightly-integrated quantum software stacks and heterogenous quantum software stacks",
        "type": "many_choice",
        "answers": [
            {
                "answer": "Tightly-integrated quantum software stacks are a type of quantum programming stack as a service.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Quantum programming stack as a service are a type of tightly-integrated quantum software stacks.",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Quantum programming stack as a service are a type of heterogenousquantum software stacks.",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Heterogenous quantum software stacks are a type of quantum programming stack as a service.",
                "correct": true,
                "feedback": "Correct."
            }
        ]
    },
    {
        "question": "What are the advantages in building a custom software stack?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "More choices in selecting classical and quantum software libraries to integrate.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Provides experince in adapting to other classical or quantum software/hardware components.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Easier integration of classical and quantum software libraries.",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Easier to run on quantum hardware.",
                "correct": false,
                "feedback": "Incorrect."
            }
        ]
    },
      {
        "question": "What are the components in the Quantum Computing Software layer of the Quantum Compputing Stack, as defined in the lecture?",
        "type": "many_choice",
        "answers": [
            {
                "answer": "High Level Quantum Computing Software.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Mid-Layer Quantum Computing Software.",
                "correct": false,
                "feedback": "Incorrect."
            },
            {
                "answer": "Low Level Quantum Computing Software.",
                "correct": true,
                "feedback": "Correct."
            },
            {
                "answer": "Quantum Computing Hardware.",
                "correct": false,
                "feedback": "Incorrect."
            }
        ]
    }
 
]